{
  "name": "api",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "build": "tsc",
    "start": "concurrently \"npm run build\" \"cross-env NODE_ENV=production node build/index.js\"",
    "dev": "concurrently -k -n \"TypeScript,Node\" -p \"[{name}]\" -c \"blue,green\" \"tsc --watch\" \"cross-env NODE_ENV=development nodemon build/index.js\"",
    "format": "ts-standard \"./src/**/*.ts\" --fix | snazzy",
    "test": "jest --watchAll --no-cache",
    "prepare": "npm run build"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "setupFilesAfterEnv": [
      "./__test__/setup.ts"
    ],
    "rootDir": "./src"
  },
  "ts-standard": {
    "envs": [
      "node",
      "jest"
    ]
  },
  "dependencies": {
    "cors": "latest",
    "dotenv": "latest",
    "express": "latest",
    "express-async-errors": "latest",
    "express-fileupload": "latest",
    "express-http-to-https": "latest",
    "express-validator": "latest",
    "helmet": "latest",
    "morgan": "latest",
    "mysql2": "latest",
    "reflect-metadata": "latest",
    "sequelize": "^5.22.3",
    "sequelize-typescript": "^1.1.0",
    "tslib": "latest"
  },
  "devDependencies": {
    "@types/bluebird": "latest",
    "@types/cors": "latest",
    "@types/express": "latest",
    "@types/express-fileupload": "latest",
    "@types/helmet": "latest",
    "@types/jest": "latest",
    "@types/morgan": "latest",
    "@types/node": "latest",
    "@types/supertest": "latest",
    "@types/validator": "latest",
    "concurrently": "latest",
    "cross-env": "latest",
    "jest": "latest",
    "nodemon": "latest",
    "snazzy": "latest",
    "sqlite": "latest",
    "sqlite3": "latest",
    "supertest": "latest",
    "ts-jest": "latest",
    "ts-standard": "latest",
    "typescript": "latest"
  }
}
